
import base64, codecs
magic = 'CmltcG9ydCB4Ym1jLCB4Ym1jdmZzLCB4Ym1jYWRkb24sIHhibWNndWkscmUsIG9zLCBnbG9iLCB0aHJlYWQKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKdHJ5OiAgICBmcm9tIHNxbGl0ZTMgaW1wb3J0IGRiYXBpMiBhcyBkYXRhYmFzZQpleGNlcHQ6IGZyb20gcHlzcWxpdGUyIGltcG9ydCBkYmFwaTIgYXMgZGF0YWJhc2UKCmRlZiBtYWluKCk6CgljbGFzcyBlbmFibGVBbGwoKToKCQlkZWYgX19pbml0X18oc2VsZik6CgkJCXNlbGYuZGF0YWJhc2VwYXRoID0geGJtYy50cmFuc2xhdGVQYXRoKCdzcGVjaWFsOi8vZGF0YWJhc2UvJykKCQkJc2VsZi5hZGRvbnMgICAgICAgPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nKQoJCQlzZWxmLmRiZmlsZW5hbWUgICA9IHNlbGYubGF0ZXN0REIoKQoJCQlzZWxmLmRiZmlsZW5hbWUgICA9IG9zLnBhdGguam9pbihzZWxmLmRhdGFiYXNlcGF0aCwgc2VsZi5kYmZpbGVuYW1lKQoJCQlzZWxmLnN3YXBVUygpCgkJCWlmIG5vdCBvcy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4oc2VsZi5kYXRhYmFzZXBhdGgsIHNlbGYuZGJmaWxlbmFtZSkpOgoJCQkJeGJtY2d1aS5EaWFsb2coKS5ub3RpZmljYXRpb24oIkF1dG9FeGVjLnB5IiwgIk5vIEFkZG9uczI3LmRiIGZpbGUiKQoJCQkJc2VsZi5sb2coIkRCIEZpbGUgbm90IGZvdW5kLiIpCgkJCQlyZXR1cm4gRmFsc2UKCQkJCgkJCXNlbGYuYWRkb25saXN0ID0gZ2xvYi5nbG9iKG9zLnBhdGguam9pbihzZWxmLmFkZG9ucywgJyovJykpCgkJCXNlbGYuZGlzYWJsZWRBZGRvbnMgPSBbXQoJCQlmb3IgZm9sZGVyIGluIHNvcnRlZChzZWxmLmFkZG9ubGlzdCwga2V5ID0gbGFtYmRhIHg6IHgpOgoJCQkJYWRkb254bWwgPSBvcy5wYXRoLmpvaW4oZm9sZGVyLCAnYWRkb24ueG1sJykKCQkJCWlmIG9zLnBhdGguZXhpc3RzKGFkZG9ueG1sKToKCQkJCQlmb2xkICAgPSBmb2xkZXIucmVwbGFjZShzZWxmLmFkZG9ucywgJycpWzE6LTFdCgkJCQkJZiAgICAgID0gb3BlbihhZGRvbnhtbCkKCQkJCQlhICAgICAgPSBmLnJlYWQoKQoJCQkJCWFpZCAgICA9IHBhcnNlRE9NKGEsICdhZGRvbicsIHJldD0naWQnKQoJCQkJCWYuY2xvc2UoKQoJCQkJCXRyeToKCQkJCQkJaWYgbGVuKGFpZCkgPiAwOiBhZGQgPSBhaWRbMF0KCQkJCQkJZWxzZTogYWRkID0gZm9sZAoJCQkJCQl4YWRkICAgID0geGJtY2FkZG9uLkFkZG9uKGlkPWFkZCkKCQkJCQlleGNlcHQ6CgkJCQkJCXRyeToKCQkJCQkJCXNlbGYuZGlzYWJsZWRBZGRvbnMuYXBwZW5kKGFkZCkKCQkJCQkJZXhjZXB0OgoJCQkJCQkJc2VsZi5sb2coIlVuYWJsZWQgdG8gZW5hYmxlOiAlcyIgJSBmb2xkZXIsIHhibWMuTE9HRVJST1IpCgkJCWlmIGxlbihzZWxmLmRpc2FibGVkQWRkb25zKSA+IDA6CgkJCQlzZWxmLmFkZG9uRGF0YWJhc2Uoc2VsZi5kaXNhYmxlZEFkZG9ucywgMSwgVHJ1ZSkKCQkJeGJtYy5leGVjdXRlYnVpbHRpbignVXBkYXRlQWRkb25SZXBvcygpJykKCQkJeGJtYy5leGVjdXRlYnVpbHRpbignVXBkYXRlTG9jYWxBZGRvbnMoKScpCgkJCXhibWMuZXhlY3V0ZWJ1aWx0aW4oIlJlbG9hZFNraW4oKSIpCgkJCQoJCWRlZiBsb2coc2VsZiwgbXNnLCBsZXZlbD14Ym1jLkxPR05PVElDRSk6CgkJCXRyeToKCQkJCWlmIGlzaW5zdGFuY2UobXNnLCB1bmljb2RlKToKCQkJCQltc2cgPSAnJXMnICUgKG1zZy5lbmNvZGUoJ3V0Zi04JykpCgkJCQl4Ym1jLmxvZygnW0F1dG9FeGVjLnB5XTogJXMnICUgbXNnLCBsZXZlbCkKCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCQkJdHJ5OiB4Ym1jLmxvZygnW0F1dG9FeGVjLnB5XSBMb2dnaW5nIEZhaWx1cmU6ICVzJyAlIChlKSwgeGJtYy5MT0dFUlJPUikKCQkJCWV4Y2VwdDogcGFzcwoJCQkKCQlkZWYg'
love = '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'
god = 'dGV4ZS5leGVjdXRlKCdVUERBVEUgaW5zdGFsbGVkIFNFVCBlbmFibGVkID0gPyBXSEVSRSBhZGRvbklEID0gPyAnLCAoc3RhdGUsIGFkZG9uLCkpCgkJCQllbHNlOgoJCQkJCWZvciBpdGVtIGluIGFkZG9uOgoJCQkJCQl0ZXh0ZXhlLmV4ZWN1dGUoJ0lOU0VSVCBvciBJR05PUkUgaW50byBpbnN0YWxsZWQgKGFkZG9uSUQgLCBlbmFibGVkLCBpbnN0YWxsRGF0ZSkgVkFMVUVTICg/LD8sPyknLCAoaXRlbSwgc3RhdGUsIGluc3RhbGxlZHRpbWUsKSkKCQkJCQkJdGV4dGV4ZS5leGVjdXRlKCdVUERBVEUgaW5zdGFsbGVkIFNFVCBlbmFibGVkID0gPyBXSEVSRSBhZGRvbklEID0gPyAnLCAoc3RhdGUsIGl0ZW0sKSkKCQkJCXRleHRkYi5jb21taXQoKQoJCQkJdGV4dGV4ZS5jbG9zZSgpCgkJCWV4Y2VwdCBFeGNlcHRpb24sIGU6CgkJCQlzZWxmLmxvZygiRXJyb3JpbmcgZW5hYmxpbmcgYWRkb246ICVzIiAlIGFkZG9uLCB4Ym1jLkxPR0VSUk9SKQoJCgl0cnk6CgkJeGJtY2d1aS5EaWFsb2coKS5ub3RpZmljYXRpb24oIkF1dG9FeGVjLnB5IiwgIlN0YXJ0aW5nIFNjcmlwdC4uLiIpCgkJZmlyc3RSdW4gPSBlbmFibGVBbGwoKQoJCXhibWNndWkuRGlhbG9nKCkubm90aWZpY2F0aW9uKCJBdXRvRXhlYy5weSIsICJBbGwgQWRkb25zIEVuYWJsZWQiKQoJCXhibWN2ZnMuZGVsZXRlKCdzcGVjaWFsOi8vdXNlcmRhdGEvYXV0b2V4ZWMucHknKQoJZXhjZXB0IEV4Y2VwdGlvbiwgZToKCQl4Ym1jZ3VpLkRpYWxvZygpLm5vdGlmaWNhdGlvbigiQXV0b0V4ZWMucHkiLCAiRXJyb3IgQ2hlY2sgTG9nRmlsZSIpCgkJeGJtYy5sb2coc3RyKGUpLCB4Ym1jLkxPR0VSUk9SKQoJCXhibWN2ZnMuZGVsZXRlKCdzcGVjaWFsOi8vdXNlcmRhdGEvYXV0b2V4ZWMucHknKQoKZGVmIHBhcnNlRE9NKGh0bWwsIG5hbWU9dSIiLCBhdHRycz17fSwgcmV0PUZhbHNlKToKCSMgQ29weXJpZ2h0IChDKSAyMDEwLTIwMTEgVG9iaWFzIFVzc2luZyBBbmQgSGVucmlrIE1vc2dhYXJkIEplbnNlbgoJaWYgaXNpbnN0YW5jZShodG1sLCBzdHIpOgoJCXRyeToKCQkJaHRtbCA9IFtodG1sLmRlY29kZSgidXRmLTgiKV0KCQlleGNlcHQ6CgkJCWh0bWwgPSBbaHRtbF0KCWVsaWYgaXNpbnN0YW5jZShodG1sLCB1bmljb2RlKToKCQlodG1sID0gW2h0bWxdCgllbGlmIG5vdCBpc2luc3RhbmNlKGh0bWwsIGxpc3QpOgoJCXJldHVybiB1IiIKCglpZiBub3QgbmFtZS5zdHJpcCgpOgoJCXJldHVybiB1IiIKCglyZXRfbHN0ID0gW10KCWZvciBpdGVtIGluIGh0bWw6CgkJdGVtcF9pdGVtID0gcmUuY29tcGlsZSgnKDxbXj5dKj9cbltePl0qPz4pJykuZmluZGFsbChpdGVtKQoJCWZvciBtYXRjaCBpbiB0ZW1wX2l0ZW06CgkJCWl0ZW0gPSBpdGVtLnJlcGxhY2UobWF0Y2gsIG1hdGNoLnJlcGxhY2UoIlxuIiwgIiAiKSkKCgkJbHN0ID0gW10KCQlmb3Iga2V5IGluIGF0dHJzOgoJCQlsc3QyID0gcmUuY29tcGlsZSgnKDwnICsgbmFtZSArICdbXj5dKj8oPzonICsga2V5ICsgJz1bXCciXScgKyBhdHRyc1trZXldICsgJ1tcJyJdLio/PikpJywgcmUuTSB8IHJlLlMpLmZpbmRhbGwoaXRlbSkKCQkJaWYgbGVuKGxzdDIpID09IDAgYW5kIGF0dHJzW2tleV0uZmluZCgiICIpID09IC0xOgoJCQkJbHN0MiA9IHJlLmNvbXBpbGUoJyg8JyArIG5hbWUgKyAnW14+XSo/KD86JyArIGtleSArICc9JyArIGF0dHJzW2tleV0gKyAnLio/PikpJywgcmUuTSB8IHJlLlMpLmZpbmRhbGwoaXRlbSkKCgkJCWlmIGxlbihsc3QpID09IDA6CgkJCQlsc3QgPSBsc3QyCgkJCQlsc3QyID0gW10KCQkJZWxzZToKCQkJCXRlc3QgPSByYW5nZShsZW4obHN0KSkKCQkJCXRlc3QucmV2ZXJzZSgpCgkJCQlmb3IgaSBpbiB0ZXN0OgoJCQkJCWlmIG5vdCBsc3RbaV0gaW4gbHN0MjoKCQkJCQkJZGVs'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))